[
  {
    "id": "HttpTrigger-Java",
    "metadata": {
      "name": "HttpTrigger",
      "description": "$HttpTriggerJava_description",
      "defaultFunctionName": "httpTriggerJava",
      "language": "Java",
      "userPrompt": []
    },
    "files": {
      "function.java": "package $packageName$;\n\nimport com.microsoft.azure.serverless.functions.annotation.*;\nimport com.microsoft.azure.serverless.functions.*;\n\n/**\n * Azure Functions with HTTP trigger.\n */\npublic class $functionName$ {\n    /**\n     * This function will listen at HTTP endpoint \"/api/$functionName$\". Two approaches to invoke it using \"curl\" command in bash:\n     *   1. curl -d \"Http Body\" {your host}/api/$functionName$\n     *   2. curl {your host}/api/$functionName$?name=HTTP%20Query\n     */\n    @FunctionName(\"$functionName$\")\n    public HttpResponseMessage httpHandler(\n        @HttpTrigger(name = \"req\", methods = { \"get\", \"post\" }, authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage request,\n        final ExecutionContext context\n    ) {\n        context.getLogger().info(\"Java HTTP trigger processed a request.\");\n\n        // Parse query parameters\n        String name = request.getQueryParameters().get(\"name\");\n\n        if (name == null) {\n            // Get request body\n            Object body = request.getBody();\n            if (body != null) {\n                name = body.toString();\n            }\n        }\n\n        if (name == null) {\n            return request.createResponse(400, \"Please pass a name on the query string or in the request body\");\n        } else {\n            return request.createResponse(200, \"Hello, \" + name);\n        }\n    }\n}\n"
    }
  },
  {
    "id": "BlobTrigger-Java",
    "metadata": {
      "name": "BlobTrigger",
      "description": "$BlobTriggerJava_description",
      "defaultFunctionName": "blobTriggerJava",
      "language": "Java",
      "userPrompt": [
        "connection",
        "path"
      ]
    },
    "files": {
      "function.java": "package $packageName$;\n\nimport com.microsoft.azure.serverless.functions.annotation.*;\nimport com.microsoft.azure.serverless.functions.*;\n\n/**\n * Azure Functions with Azure Blob trigger.\n */\npublic class $functionName$ {\n    /**\n     * This function will be invoked when a new or updated blob is detected at the specified path. The blob contents are provided as input to this function.\n     */\n    @FunctionName(\"$functionName$\")\n    public void blobHandler(\n        @BlobTrigger(name = \"content\", path = \"$path$\", connection = \"$connection$\") String content,\n        final ExecutionContext context\n    ) {\n        context.getLogger().info(\"Java Blob trigger function processed a blob. Blob=\" + content);\n    }\n}\n"
    }
  },
  {
    "id": "QueueTrigger-Java",
    "metadata": {
      "name": "QueueTrigger",
      "description": "$QueueTriggerJava_description",
      "defaultFunctionName": "queueTriggerJava",
      "language": "Java",
      "userPrompt": [
        "connection",
        "queueName"
      ]
    },
    "files": {
      "function.java": "package $packageName$;\n\nimport com.microsoft.azure.serverless.functions.annotation.*;\nimport com.microsoft.azure.serverless.functions.*;\n\n/**\n * Azure Functions with Azure Storage Queue trigger.\n */\npublic class $functionName$ {\n    /**\n     * This function will be invoked when a new message is received at the specified path. The message contents are provided as input to this function.\n     */\n    @FunctionName(\"$functionName$\")\n    public void queueHandler(\n        @QueueTrigger(name = \"message\", queueName = \"$queueName$\", connection = \"$connection$\") String message,\n        final ExecutionContext context\n    ) {\n        context.getLogger().info(\"Java Queue trigger function processed a message: \" + message);\n    }\n}\n"
    }
  },
  {
    "id": "TimerTrigger-Java",
    "metadata": {
      "name": "TimerTrigger",
      "description": "$TimerTriggerJava_description",
      "defaultFunctionName": "timerTriggerJava",
      "language": "Java",
      "userPrompt": [
        "schedule"
      ]
    },
    "files": {
      "function.java": "package $packageName$;\n\nimport java.time.*;\nimport com.microsoft.azure.serverless.functions.annotation.*;\nimport com.microsoft.azure.serverless.functions.*;\n\n/**\n * Azure Functions with Timer trigger.\n */\npublic class $functionName$ {\n    /**\n     * This function will be invoked periodically according to the specified schedule.\n     */\n    @FunctionName(\"$functionName$\")\n    public void timerHandler(\n        @TimerTrigger(name = \"timerInfo\", schedule = \"$schedule$\") String timerInfo,\n        final ExecutionContext context\n    ) {\n        context.getLogger().info(\"Java Timer trigger function executed at: \" + LocalDateTime.now());\n    }\n}\n"
    }
  }
]
